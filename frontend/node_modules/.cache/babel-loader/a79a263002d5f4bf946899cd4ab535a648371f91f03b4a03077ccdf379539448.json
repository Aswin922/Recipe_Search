{"ast":null,"code":"const BASE = process.env.REACT_APP_API_BASE || 'http://localhost:8080/';\nexport class ApiError extends Error {\n  constructor(message, status, body) {\n    super(message);\n    this.name = 'ApiError';\n    this.status = status;\n    this.body = body;\n  }\n}\nasync function safeParse(response) {\n  const text = await response.text();\n  try {\n    return JSON.parse(text);\n  } catch {\n    return text;\n  }\n}\nasync function fetchJson(url, opts = {}) {\n  const res = await fetch(url, opts);\n  const parsed = await safeParse(res);\n  if (!res.ok) {\n    throw new ApiError((parsed === null || parsed === void 0 ? void 0 : parsed.message) || 'API request failed', res.status, parsed);\n  }\n  return parsed;\n}\nexport function searchRecipes(q) {\n  const url = `${BASE}/api/v1/recipes?q=${encodeURIComponent(q)}`;\n  return fetchJson(url, {\n    method: 'GET'\n  });\n}\nexport function loadRecipes() {\n  const url = `${BASE}/api/v1/recipes/load`;\n  return fetchJson(url, {\n    method: 'POST'\n  });\n}","map":{"version":3,"names":["BASE","process","env","REACT_APP_API_BASE","ApiError","Error","constructor","message","status","body","name","safeParse","response","text","JSON","parse","fetchJson","url","opts","res","fetch","parsed","ok","searchRecipes","q","encodeURIComponent","method","loadRecipes"],"sources":["C:/Aswin/recipes_project/frontend/src/services/api.js"],"sourcesContent":["const BASE = process.env.REACT_APP_API_BASE || 'http://localhost:8080/';\r\n\r\nexport class ApiError extends Error {\r\n  constructor(message, status, body) {\r\n    super(message);\r\n    this.name = 'ApiError';\r\n    this.status = status;\r\n    this.body = body;\r\n  }\r\n}\r\n\r\nasync function safeParse(response) {\r\n  const text = await response.text();\r\n  try {\r\n    return JSON.parse(text);\r\n  } catch {\r\n    return text;\r\n  }\r\n}\r\n\r\nasync function fetchJson(url, opts = {}) {\r\n  const res = await fetch(url, opts);\r\n  const parsed = await safeParse(res);\r\n  if (!res.ok) {\r\n    throw new ApiError(parsed?.message || 'API request failed', res.status, parsed);\r\n  }\r\n  return parsed;\r\n}\r\n\r\nexport function searchRecipes(q) {\r\n  const url = `${BASE}/api/v1/recipes?q=${encodeURIComponent(q)}`;\r\n  return fetchJson(url, { method: 'GET' });\r\n}\r\n\r\nexport function loadRecipes() {\r\n  const url = `${BASE}/api/v1/recipes/load`;\r\n  return fetchJson(url, { method: 'POST' });\r\n}\r\n"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,IAAI,wBAAwB;AAEvE,OAAO,MAAMC,QAAQ,SAASC,KAAK,CAAC;EAClCC,WAAWA,CAACC,OAAO,EAAEC,MAAM,EAAEC,IAAI,EAAE;IACjC,KAAK,CAACF,OAAO,CAAC;IACd,IAAI,CAACG,IAAI,GAAG,UAAU;IACtB,IAAI,CAACF,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,IAAI,GAAGA,IAAI;EAClB;AACF;AAEA,eAAeE,SAASA,CAACC,QAAQ,EAAE;EACjC,MAAMC,IAAI,GAAG,MAAMD,QAAQ,CAACC,IAAI,CAAC,CAAC;EAClC,IAAI;IACF,OAAOC,IAAI,CAACC,KAAK,CAACF,IAAI,CAAC;EACzB,CAAC,CAAC,MAAM;IACN,OAAOA,IAAI;EACb;AACF;AAEA,eAAeG,SAASA,CAACC,GAAG,EAAEC,IAAI,GAAG,CAAC,CAAC,EAAE;EACvC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACH,GAAG,EAAEC,IAAI,CAAC;EAClC,MAAMG,MAAM,GAAG,MAAMV,SAAS,CAACQ,GAAG,CAAC;EACnC,IAAI,CAACA,GAAG,CAACG,EAAE,EAAE;IACX,MAAM,IAAIlB,QAAQ,CAAC,CAAAiB,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEd,OAAO,KAAI,oBAAoB,EAAEY,GAAG,CAACX,MAAM,EAAEa,MAAM,CAAC;EACjF;EACA,OAAOA,MAAM;AACf;AAEA,OAAO,SAASE,aAAaA,CAACC,CAAC,EAAE;EAC/B,MAAMP,GAAG,GAAG,GAAGjB,IAAI,qBAAqByB,kBAAkB,CAACD,CAAC,CAAC,EAAE;EAC/D,OAAOR,SAAS,CAACC,GAAG,EAAE;IAAES,MAAM,EAAE;EAAM,CAAC,CAAC;AAC1C;AAEA,OAAO,SAASC,WAAWA,CAAA,EAAG;EAC5B,MAAMV,GAAG,GAAG,GAAGjB,IAAI,sBAAsB;EACzC,OAAOgB,SAAS,CAACC,GAAG,EAAE;IAAES,MAAM,EAAE;EAAO,CAAC,CAAC;AAC3C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}