{"ast":null,"code":"var _jsxFileName = \"C:\\\\Aswin\\\\recipes_project\\\\frontend\\\\src\\\\components\\\\RecipeGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport RecipeCard from './RecipeCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RecipeGrid({\n  recipes\n}) {\n  _s();\n  const [sortAsc, setSortAsc] = useState(true);\n  const [tagFilter, setTagFilter] = useState(null);\n  const allTags = Array.from(new Set((recipes || []).flatMap(r => r.tags || [])));\n  let shown = (recipes || []).slice();\n  if (tagFilter) shown = shown.filter(r => (r.tags || []).includes(tagFilter));\n  shown.sort((a, b) => (a.cookTimeMinutes || 0) - (b.cookTimeMinutes || 0));\n  if (!sortAsc) shown.reverse();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Sort by cook time:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: sortAsc ? 'asc' : 'desc',\n          onChange: e => setSortAsc(e.target.value === 'asc'),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"asc\",\n            children: \"Ascending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"desc\",\n            children: \"Descending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Filter tag:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setTagFilter(e.target.value || null),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), allTags.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: t,\n            children: t\n          }, t, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 31\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: shown.map(r => /*#__PURE__*/_jsxDEV(RecipeCard, {\n        recipe: r\n      }, r.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(RecipeGrid, \"nY04zCHznvQzAHOKc7NoR85wUWY=\");\n_c = RecipeGrid;\nvar _c;\n$RefreshReg$(_c, \"RecipeGrid\");","map":{"version":3,"names":["React","useState","RecipeCard","jsxDEV","_jsxDEV","RecipeGrid","recipes","_s","sortAsc","setSortAsc","tagFilter","setTagFilter","allTags","Array","from","Set","flatMap","r","tags","shown","slice","filter","includes","sort","a","b","cookTimeMinutes","reverse","children","className","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","t","recipe","id","_c","$RefreshReg$"],"sources":["C:/Aswin/recipes_project/frontend/src/components/RecipeGrid.js"],"sourcesContent":["import React, { useState } from 'react';\nimport RecipeCard from './RecipeCard';\n\nexport default function RecipeGrid({ recipes }) {\n  const [sortAsc, setSortAsc] = useState(true);\n  const [tagFilter, setTagFilter] = useState(null);\n\n  const allTags = Array.from(new Set((recipes || []).flatMap(r => r.tags || [])));\n\n  let shown = (recipes || []).slice();\n  if (tagFilter) shown = shown.filter(r => (r.tags || []).includes(tagFilter));\n  shown.sort((a,b) => (a.cookTimeMinutes||0) - (b.cookTimeMinutes||0));\n  if (!sortAsc) shown.reverse();\n\n  return (\n    <div>\n      <div className=\"controls\">\n        <label>Sort by cook time:\n          <select value={sortAsc ? 'asc' : 'desc'} onChange={e => setSortAsc(e.target.value === 'asc')}>\n            <option value=\"asc\">Ascending</option>\n            <option value=\"desc\">Descending</option>\n          </select>\n        </label>\n        <label>Filter tag:\n          <select onChange={e => setTagFilter(e.target.value || null)}>\n            <option value=\"\">All</option>\n            {allTags.map(t => <option key={t} value={t}>{t}</option>)}\n          </select>\n        </label>\n      </div>\n      <div className=\"grid\">\n        {shown.map(r => <RecipeCard key={r.id} recipe={r} />)}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}